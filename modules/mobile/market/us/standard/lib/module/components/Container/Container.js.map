{"version":3,"sources":["Container.tsx"],"names":["React","ScrollView","makeStyles","useTheme","Container","children","style","props","theme","containerStyles","container"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAAsC,cAAtC;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,SAASC,QAAT,QAAyB,8BAAzB;AAEA,OAAO,MAAMC,SAA0C,GAAG,QAIpD;AAAA,MAJqD;AACzDC,IAAAA,QADyD;AAEzDC,IAAAA,KAFyD;AAGzD,OAAGC;AAHsD,GAIrD;AACJ,QAAMC,KAAK,GAAGL,QAAQ,EAAtB;AAEA,QAAMM,eAAe,GAAGP,UAAU,CAACM,KAAD,CAAlC;AAEA,sBACE,oBAAC,UAAD;AACE,IAAA,qBAAqB,EAAE,CAACC,eAAe,CAACC,SAAjB,EAA4BJ,KAA5B;AADzB,KAEMC,KAFN,GAIGF,QAJH,CADF;AAQD,CAjBM","sourcesContent":["import React from 'react';\nimport { ScrollView, ViewStyle } from 'react-native';\nimport { makeStyles } from './styles';\nimport { useTheme } from '../../context/hooks/useTheme';\n\nexport const Container: React.FC<{ style?: ViewStyle }> = ({\n  children,\n  style,\n  ...props\n}) => {\n  const theme = useTheme();\n\n  const containerStyles = makeStyles(theme);\n\n  return (\n    <ScrollView\n      contentContainerStyle={[containerStyles.container, style]}\n      {...props}\n    >\n      {children}\n    </ScrollView>\n  );\n};\n"]}