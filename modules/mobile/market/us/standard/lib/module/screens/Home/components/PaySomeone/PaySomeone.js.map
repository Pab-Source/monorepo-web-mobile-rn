{"version":3,"sources":["PaySomeone.tsx"],"names":["React","useNavigation","useTheme","Image","Text","TouchableOpacity","makeStyles","PaySomeone","children","styleContainer","styleText","onPress","props","theme","styles","navigation","validatePress","navigate","container","text","arrow","require"],"mappings":";;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAAyBC,aAAzB,QAA8C,0BAA9C;AACA,SAASC,QAAT,QAAyB,oCAAzB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,gBAAtB,QAA8C,cAA9C;AACA,SAASC,UAAT,QAA2B,UAA3B;AAIA,OAAO,MAAMC,UAA2B,GAAG,QAMrC;AAAA,MANsC;AAC1CC,IAAAA,QAD0C;AAE1CC,IAAAA,cAAc,GAAG,EAFyB;AAG1CC,IAAAA,SAAS,GAAG,EAH8B;AAI1CC,IAAAA,OAJ0C;AAK1C,OAAGC;AALuC,GAMtC;AACJ,QAAMC,KAAK,GAAGX,QAAQ,EAAtB;AAEA,QAAMY,MAAM,GAAGR,UAAU,CAACO,KAAD,CAAzB;AAEA,QAAME,UAAU,GAAGd,aAAa,EAAhC;AAEA,QAAMe,aAAa,GAAGL,OAAO,GAAGA,OAAH,GAAa,MAAMI,UAAU,CAACE,QAAX,CAAoB,OAApB,CAAhD;AAEA,sBACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAED,aADX;AAEE,IAAA,KAAK,EAAE,CAACF,MAAM,CAACI,SAAR,EAAmBT,cAAnB;AAFT,KAGMG,KAHN,gBAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACE,MAAM,CAACK,IAAR,EAAcT,SAAd;AAAb,kBACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEI,MAAM,CAACM,KADhB;AAEE,IAAA,MAAM,EAAEC,OAAO,CAAC,mCAAD;AAFjB,IADF,EAIK,GAJL,EAKGb,QALH,CALF,CADF;AAeD,CA9BM","sourcesContent":["import React, { FC } from 'react';\nimport { NavigationProp, useNavigation } from '@react-navigation/native';\nimport { useTheme } from '../../../../context/hooks/useTheme';\nimport { Image, Text, TouchableOpacity } from 'react-native';\nimport { makeStyles } from './styles';\nimport type { RootStackParamList } from '../../../../types';\nimport type { IPaySomeone } from './types';\n\nexport const PaySomeone: FC<IPaySomeone> = ({\n  children,\n  styleContainer = {},\n  styleText = {},\n  onPress,\n  ...props\n}) => {\n  const theme = useTheme();\n\n  const styles = makeStyles(theme);\n\n  const navigation = useNavigation<NavigationProp<RootStackParamList>>();\n\n  const validatePress = onPress ? onPress : () => navigation.navigate('PayTo');\n\n  return (\n    <TouchableOpacity\n      onPress={validatePress}\n      style={[styles.container, styleContainer]}\n      {...props}\n    >\n      <Text style={[styles.text, styleText]}>\n        <Image\n          style={styles.arrow}\n          source={require('../../../../assets/arrowRight.png')}\n        />{' '}\n        {children}\n      </Text>\n    </TouchableOpacity>\n  );\n};\n"]}