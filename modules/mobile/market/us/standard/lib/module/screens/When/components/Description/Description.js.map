{"version":3,"sources":["Description.tsx"],"names":["React","Text","useTheme","makeStyles","Description","children","style","props","theme","stylesDescription","text"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,QAAT,QAAyB,oCAAzB;AACA,SAASC,UAAT,QAA2B,UAA3B;AAGA,OAAO,MAAMC,WAAmC,GAAG,QAI7C;AAAA,MAJ8C;AAClDC,IAAAA,QADkD;AAElDC,IAAAA,KAFkD;AAGlD,OAAGC;AAH+C,GAI9C;AACJ,QAAMC,KAAK,GAAGN,QAAQ,EAAtB;AAEA,QAAMO,iBAAiB,GAAGN,UAAU,CAACK,KAAD,CAApC;AAEA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACC,iBAAiB,CAACC,IAAnB,EAAyBJ,KAAzB;AAAb,KAAkDC,KAAlD,GACGF,QADH,CADF;AAKD,CAdM","sourcesContent":["import React from 'react';\nimport { Text } from 'react-native';\nimport { useTheme } from '../../../../context/hooks/useTheme';\nimport { makeStyles } from './styles';\nimport type { IDescription } from './types';\n\nexport const Description: React.FC<IDescription> = ({\n  children,\n  style,\n  ...props\n}) => {\n  const theme = useTheme();\n\n  const stylesDescription = makeStyles(theme);\n\n  return (\n    <Text style={[stylesDescription.text, style]} {...props}>\n      {children}\n    </Text>\n  );\n};\n"]}