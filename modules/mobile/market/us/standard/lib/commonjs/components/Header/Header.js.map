{"version":3,"sources":["Header.tsx"],"names":["Header","styleContainer","buttonProps","iconProps","onPress","close","props","navigation","headerStyles","container","alignItems","goBack","require"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAQA;;;;;;AAWO,MAAMA,MAAyB,GAAG,QAOtB;AAAA,MAPuB;AACxCC,IAAAA,cAAc,GAAG,EADuB;AAExCC,IAAAA,WAAW,GAAG,EAF0B;AAGxCC,IAAAA,SAAS,GAAG,EAH4B;AAIxCC,IAAAA,OAJwC;AAKxCC,IAAAA,KAAK,GAAG,KALgC;AAMxC,OAAGC;AANqC,GAOvB;AACjB,QAAMC,UAAU,GAAG,0BAAnB;AAEA,QAAMC,YAAY,GAAG,yBAArB;AAEA,sBACE,6BAAC,iBAAD,eACMF,KADN;AAEE,IAAA,KAAK,EAAE,CACLE,YAAY,CAACC,SADR,EAELR,cAFK,EAGLI,KAAK,GAAG;AAAEK,MAAAA,UAAU,EAAE;AAAd,KAAH,GAAgC,EAHhC;AAFT,MAQGL,KAAK,gBACJ,6BAAC,6BAAD;AACE,IAAA,OAAO,EAAED,OAAO,GAAGA,OAAH,GAAa,MAAMG,UAAU,CAACI,MAAX;AADrC,kBAGE,6BAAC,kBAAD,eAAWR,SAAX;AAAsB,IAAA,MAAM,EAAES,OAAO,CAAC,wBAAD;AAArC,KAHF,CADI,gBAOJ,6BAAC,6BAAD;AACE,IAAA,OAAO,EAAER,OAAO,GAAGA,OAAH,GAAa,MAAMG,UAAU,CAACI,MAAX;AADrC,KAEMT,WAFN,gBAIE,6BAAC,kBAAD,eAAWC,SAAX;AAAsB,IAAA,MAAM,EAAES,OAAO,CAAC,yBAAD;AAArC,KAJF,CAfJ,CADF;AAyBD,CArCM","sourcesContent":["import React from 'react';\nimport { NavigationProp, useNavigation } from '@react-navigation/core';\nimport {\n  Image,\n  ImageProps,\n  TouchableOpacity,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { makeStyles } from './styles';\nimport type { RootStackParamList } from '../../types';\n\nexport interface IHeader {\n  styleContainer?: ViewStyle;\n  buttonProps?: ViewStyle;\n  iconProps?: ImageProps;\n  close?: boolean;\n  onPress?: () => void;\n}\n\nexport const Header: React.FC<IHeader> = ({\n  styleContainer = {},\n  buttonProps = {},\n  iconProps = {},\n  onPress,\n  close = false,\n  ...props\n}): JSX.Element => {\n  const navigation = useNavigation<NavigationProp<RootStackParamList>>();\n\n  const headerStyles = makeStyles();\n\n  return (\n    <View\n      {...props}\n      style={[\n        headerStyles.container,\n        styleContainer,\n        close ? { alignItems: 'flex-end' } : {},\n      ]}\n    >\n      {close ? (\n        <TouchableOpacity\n          onPress={onPress ? onPress : () => navigation.goBack()}\n        >\n          <Image {...iconProps} source={require('../../assets/close.png')} />\n        </TouchableOpacity>\n      ) : (\n        <TouchableOpacity\n          onPress={onPress ? onPress : () => navigation.goBack()}\n          {...buttonProps}\n        >\n          <Image {...iconProps} source={require('../../assets/Vector.png')} />\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n};\n"]}