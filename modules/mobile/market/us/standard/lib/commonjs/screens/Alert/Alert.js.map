{"version":3,"sources":["Alert.tsx"],"names":["console","disableYellowBox","Alert","route","loading","setLoading","setTimeout","params"],"mappings":";;;;;;;AAAA;;AAGA;;;;;;AAEAA,OAAO,CAACC,gBAAR,GAA2B,IAA3B;;AAOO,MAAMC,KAAuB,GAAG,QAAe;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACpD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB,qBAAS,IAAT,CAA9B;AAEA,wBAAU,MAAM;AACdC,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJD,EAIG,EAJH;;AAMA,MAAID,OAAJ,EAAa;AACX,wBAAO,6BAAC,0BAAD,OAAP;AACD;;AAED,sBAAO,6BAAC,0BAAD;AAAgB,IAAA,IAAI,EAAED,KAAK,CAACI;AAA5B,IAAP;AACD,CAdM","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { NavigationProp, RouteProp } from '@react-navigation/core';\nimport { RootStackParamList } from '../../types';\nimport { LoadingInitial, LoadingSuccess } from './components';\n\nconsole.disableYellowBox = true;\n\nexport interface IAlert {\n  navigation: NavigationProp<RootStackParamList>;\n  route: RouteProp<RootStackParamList, 'Alert'>;\n}\n\nexport const Alert: React.FC<IAlert> = ({ route }) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 3000);\n  }, []);\n\n  if (loading) {\n    return <LoadingInitial />;\n  }\n\n  return <LoadingSuccess data={route.params} />;\n};\n"]}