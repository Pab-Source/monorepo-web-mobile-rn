{"version":3,"sources":["Review.tsx"],"names":["Review","route","navigation","fields","Object","values","params","theme","map","field","JSON","stringify","label","value","navigate","marginTop","backgroundColor","backgroundColorCancel","color","textColorCancel","popToTop","Container","Header","Title","ContainerFields","Field","ContainerButtons","Button"],"mappings":";;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAmDA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAhDO,MAAMA,MAAM,GAAG,QAAoC;AAAA,MAAnC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAmC;AACxD,QAAMC,MAAwB,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAE,GAAGJ,KAAK,CAACK;AAAX,GAAd,CAAjC;AACA,QAAMC,KAAK,GAAG,yBAAd;AAEA,sBACE,6BAAC,qBAAD,qBACE,6BAAC,iBAAD,qBACE,6BAAC,kBAAD,OADF,eAEE,6BAAC,iBAAD,iBAFF,CADF,eAKE,6BAAC,4BAAD,QACGJ,MADH,aACGA,MADH,uBACGA,MAAM,CAAEK,GAAR,CAAaC,KAAD,iBACX,6BAAC,kBAAD;AACE,IAAA,GAAG,EAAEC,IAAI,CAACC,SAAL,CAAeF,KAAf,CADP;AAEE,IAAA,KAAK,EAAEA,KAAK,CAACG,KAFf;AAGE,IAAA,KAAK,EAAEH,KAAK,CAACI;AAHf,IADD,CADH,CALF,eAcE,6BAAC,6BAAD,qBACE,6BAAC,kBAAD;AACE,IAAA,OAAO,EAAE,MAAMX,UAAU,CAACY,QAAX,CAAoB,OAApB,EAA6B,EAAE,GAAGb,KAAK,CAACK;AAAX,KAA7B;AADjB,oBADF,eAME,6BAAC,kBAAD;AACE,IAAA,KAAK,EAAE;AACLS,MAAAA,SAAS,EAAE,EADN;AAELC,MAAAA,eAAe,EAAET,KAAK,CAACU;AAFlB,KADT;AAKE,IAAA,SAAS,EAAE;AAAEC,MAAAA,KAAK,EAAEX,KAAK,CAACY;AAAf,KALb;AAME,IAAA,OAAO,EAAE,MAAMjB,UAAU,CAACkB,QAAX;AANjB,cANF,CAdF,CADF;AAkCD,CAtCM;;;AAwCPpB,MAAM,CAACqB,SAAP,GAAmBA,qBAAnB;AACArB,MAAM,CAACsB,MAAP,GAAgBA,kBAAhB;AACAtB,MAAM,CAACuB,KAAP,GAAeA,iBAAf;AACAvB,MAAM,CAACwB,eAAP,GAAyBA,4BAAzB;AACAxB,MAAM,CAACyB,KAAP,GAAeA,kBAAf;AACAzB,MAAM,CAAC0B,gBAAP,GAA0BA,6BAA1B;AACA1B,MAAM,CAAC2B,MAAP,GAAgBA,kBAAhB","sourcesContent":["import React from 'react';\nimport { View } from 'react-native';\nimport { Header, Container, Title, Button } from '../../components';\nimport { ContainerButtons, ContainerFields, Field, IField } from './components';\nimport { useTheme } from '../../context/hooks/useTheme';\nimport type { IReview } from './types';\n\nexport const Review = ({ route, navigation }: IReview) => {\n  const fields: IField[] | any[] = Object.values({ ...route.params });\n  const theme = useTheme();\n\n  return (\n    <Container>\n      <View>\n        <Header />\n        <Title>Review</Title>\n      </View>\n      <ContainerFields>\n        {fields?.map((field: IField) => (\n          <Field\n            key={JSON.stringify(field)}\n            label={field.label}\n            value={field.value}\n          />\n        ))}\n      </ContainerFields>\n      <ContainerButtons>\n        <Button\n          onPress={() => navigation.navigate('Alert', { ...route.params })}\n        >\n          Send payment\n        </Button>\n        <Button\n          style={{\n            marginTop: 10,\n            backgroundColor: theme.backgroundColorCancel,\n          }}\n          styleText={{ color: theme.textColorCancel }}\n          onPress={() => navigation.popToTop()}\n        >\n          Cancel\n        </Button>\n      </ContainerButtons>\n    </Container>\n  );\n};\n\nReview.Container = Container;\nReview.Header = Header;\nReview.Title = Title;\nReview.ContainerFields = ContainerFields;\nReview.Field = Field;\nReview.ContainerButtons = ContainerButtons;\nReview.Button = Button;\n\nexport * from './types';\n"]}