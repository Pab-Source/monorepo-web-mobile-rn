{"version":3,"sources":["When.tsx"],"names":["When","navigation","route","goTo","actualDate","setActualDate","handleNavigate","navigate","params","when","label","value","flex","justifyContent","date","marginTop","Container","Header","Title","Description","Calendar","Button"],"mappings":";;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAuCA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;AApCO,MAAMA,IAAI,GAAG,QAAmD;AAAA,MAAlD;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,IAAI,GAAG;AAA5B,GAAkD;AACrE,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B,qBAAS,EAAT,CAApC;;AAEA,QAAMC,cAAc,GAAG,MAAM;AAC3BL,IAAAA,UAAU,CAACM,QAAX,CAAoBJ,IAApB,EAA0B,EACxB,GAAGD,KAAK,CAACM,MADe;AAExBC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,KAAK,EAAEP;AAAxB;AAFkB,KAA1B;AAID,GALD;;AAOA,sBACE,6BAAC,sBAAD;AAAW,IAAA,KAAK,EAAE;AAAEQ,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE;AAA3B;AAAlB,kBACE,6BAAC,iBAAD,qBACE,6BAAC,mBAAD,OADF,eAEE,6BAAC,kBAAD,eAFF,eAGE,6BAAC,uBAAD,sBAHF,CADF,eAME,6BAAC,oBAAD;AAAU,IAAA,QAAQ,EAAGC,IAAD,IAAUT,aAAa,CAACS,IAAD;AAA3C,IANF,eAOE,6BAAC,mBAAD;AACE,IAAA,QAAQ,EAAE,CAACV,UADb;AAEE,IAAA,OAAO,EAAEE,cAFX;AAGE,IAAA,KAAK,EAAE;AAAES,MAAAA,SAAS,EAAE;AAAb;AAHT,gBAPF,CADF;AAiBD,CA3BM;;;AA6BPf,IAAI,CAACgB,SAAL,GAAiBA,sBAAjB;AACAhB,IAAI,CAACiB,MAAL,GAAcA,mBAAd;AACAjB,IAAI,CAACkB,KAAL,GAAaA,kBAAb;AACAlB,IAAI,CAACmB,WAAL,GAAmBA,uBAAnB;AACAnB,IAAI,CAACoB,QAAL,GAAgBA,oBAAhB;AACApB,IAAI,CAACqB,MAAL,GAAcA,mBAAd","sourcesContent":["import React, { useState } from 'react';\nimport { View } from 'react-native';\nimport { Calendar, Description } from './components';\nimport { Header, Title, Button, Container } from '../../components';\nimport type { IWhen } from './types';\n\nexport const When = ({ navigation, route, goTo = 'Review' }: IWhen) => {\n  const [actualDate, setActualDate] = useState('');\n\n  const handleNavigate = () => {\n    navigation.navigate(goTo, {\n      ...route.params,\n      when: { label: 'When', value: actualDate },\n    });\n  };\n\n  return (\n    <Container style={{ flex: 1, justifyContent: 'space-between' }}>\n      <View>\n        <Header />\n        <Title>When</Title>\n        <Description>Choose date</Description>\n      </View>\n      <Calendar onChange={(date) => setActualDate(date)} />\n      <Button\n        disabled={!actualDate}\n        onPress={handleNavigate}\n        style={{ marginTop: 40 }}\n      >\n        Continue\n      </Button>\n    </Container>\n  );\n};\n\nWhen.Container = Container;\nWhen.Header = Header;\nWhen.Title = Title;\nWhen.Description = Description;\nWhen.Calendar = Calendar;\nWhen.Button = Button;\n\nexport * from './types';\n"]}