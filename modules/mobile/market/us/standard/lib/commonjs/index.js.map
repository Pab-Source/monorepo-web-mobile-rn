{"version":3,"sources":["index.tsx"],"names":["RootComponent","secureRoutes","theme","defaultTheme","Stack","routes","Object","values","internalRoutes","headerShown","map","route","JSON","stringify","component","name"],"mappings":";;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAoCA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAnCO,MAAMA,aAAuC,GAAG,QAGjD;AAAA,MAHkD;AACtDC,IAAAA,YAAY,GAAG,EADuC;AAEtDC,IAAAA,KAAK,GAAGC;AAF8C,GAGlD;AACJ,QAAMC,KAAK,GAAG,8CAAd;AAEA,QAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,EAC3B,GAAGC,sBADwB;AAE3B,OAAGP;AAFwB,GAAd,CAAf;AAKA,sBACE,6BAAC,oBAAD;AAAe,IAAA,KAAK,EAAEC;AAAtB,kBACE,6BAAC,2BAAD,qBACE,6BAAC,KAAD,CAAO,SAAP;AACE,IAAA,gBAAgB,EAAC,MADnB;AAEE,IAAA,aAAa,EAAE;AAAEO,MAAAA,WAAW,EAAE;AAAf;AAFjB,KAIGJ,MAAM,CAACK,GAAP,CAAYC,KAAD,IAAW;AACrB,wBACE,6BAAC,KAAD,CAAO,MAAP;AACE,MAAA,GAAG,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEF,QAAAA;AAAF,OAAf,CADP;AAEE,MAAA,SAAS,EAAEA,KAAK,CAACG,SAFnB;AAGE,MAAA,IAAI,EAAEH,KAAK,CAACI;AAHd,MADF;AAOD,GARA,CAJH,CADF,CADF,CADF;AAoBD,CA/BM","sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { internalRoutes } from './routes';\nimport { ThemeProvider } from './context/Theme/Theme';\nimport { theme as defaultTheme } from './constants/theme';\nimport type { IRootComponent, RootStackParamList, Screens } from './types';\n\nexport const RootComponent: React.FC<IRootComponent> = ({\n  secureRoutes = {},\n  theme = defaultTheme,\n}) => {\n  const Stack = createNativeStackNavigator<RootStackParamList>();\n\n  const routes = Object.values({\n    ...internalRoutes,\n    ...secureRoutes,\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <NavigationContainer>\n        <Stack.Navigator\n          initialRouteName=\"Home\"\n          screenOptions={{ headerShown: false }}\n        >\n          {routes.map((route) => {\n            return (\n              <Stack.Screen\n                key={JSON.stringify({ route })}\n                component={route.component}\n                name={route.name as Screens}\n              />\n            );\n          })}\n        </Stack.Navigator>\n      </NavigationContainer>\n    </ThemeProvider>\n  );\n};\n\nexport * from './components';\nexport * from './screens';\nexport * from './types';\n"]}